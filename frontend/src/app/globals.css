@import "@radix-ui/colors/black-alpha.css" layer(base);
@import "@radix-ui/colors/mauve.css" layer(base);
@import "@radix-ui/colors/violet.css" layer(base);
@import "tailwindcss";

@tailwind utilities;

@plugin 'tailwindcss-animate';

@custom-variant dark (&:where(.dark, .dark *));

@theme {
    --color-background: hsl(var(--background));
    --color-foreground: hsl(var(--foreground));

    --color-card: hsl(var(--card));
    --color-card-foreground: hsl(var(--card-foreground));

    --color-popover: hsl(var(--popover));
    --color-popover-foreground: hsl(var(--popover-foreground));

    --color-primary: hsl(var(--primary));
    --color-primary-foreground: hsl(var(--primary-foreground));

    --color-secondary: hsl(var(--secondary));
    --color-secondary-foreground: hsl(var(--secondary-foreground));

    --color-muted: hsl(var(--muted));
    --color-muted-foreground: hsl(var(--muted-foreground));

    --color-accent: hsl(var(--accent));
    --color-accent-foreground: hsl(var(--accent-foreground));

    --color-destructive: hsl(var(--destructive));
    --color-destructive-foreground: hsl(var(--destructive-foreground));

    --color-border: hsl(var(--border));
    --color-input: hsl(var(--input));
    --color-ring: hsl(var(--ring));

    --color-chart-1: hsl(var(--chart-1));
    --color-chart-2: hsl(var(--chart-2));
    --color-chart-3: hsl(var(--chart-3));
    --color-chart-4: hsl(var(--chart-4));
    --color-chart-5: hsl(var(--chart-5));

    --radius-lg: var(--radius);
    --radius-md: calc(var(--radius) - 2px);
    --radius-sm: calc(var(--radius) - 4px);
}

/*
  The default border color has changed to `currentColor` in Tailwind CSS v4,
  so we've added these compatibility styles to make sure everything still
  looks the same as it did with Tailwind CSS v3.

  If we ever want to remove these styles, we need to add an explicit border
  color utility to any element that depends on these defaults.
*/
@layer base {
    *,
    ::after,
    ::before,
    ::backdrop,
    ::file-selector-button {
        border-color: var(--color-gray-200, currentColor);
    }
}

@layer utilities {
    :root {
        --light-green: #b7dbb8;
        --green: #6da095;
        --darkest-green: #001700;
        --dark-green: #285d66;
        --yellow-green: #e1df66;
    }

    @media (prefers-color-scheme: dark) {
        :root {
            --light-green: #b7dbc8;
            --green: #6da095;
            --dark-green: #285d66;
            --yellow-green: #e1df66;
        }
    }

    * {
        padding: 0;
        margin: 0;
        /* font-family: "Kodchasan", serif; */
        font-weight: 300;
        font-style: normal;
        user-select: none;

        /* border: 1px solid red; */
        strong {
            font-weight: 600;
        }
    }

    body {
        /* font-family: Arial, Helvetica, sans-serif; */

        -webkit-font-smoothing: antialiased;
        -moz-osx-font-smoothing: grayscale;
        font-size: 3.2vmax;
    }

    input,
    textarea,
    button,
    select,
    a {
        -webkit-tap-highlight-color: transparent;
    }
}

@layer base {
    :root {
        --background: 0 0% 100%;
        --foreground: 0 0% 3.9%;
        --card: 0 0% 100%;
        --card-foreground: 0 0% 3.9%;
        --popover: 0 0% 100%;
        --popover-foreground: 0 0% 3.9%;
        --primary: 0 0% 9%;
        --primary-foreground: 0 0% 98%;
        --secondary: 0 0% 96.1%;
        --secondary-foreground: 0 0% 9%;
        --muted: 0 0% 96.1%;
        --muted-foreground: 0 0% 45.1%;
        --accent: 0 0% 96.1%;
        --accent-foreground: 0 0% 9%;
        --destructive: 0 84.2% 60.2%;
        --destructive-foreground: 0 0% 98%;
        --border: 0 0% 89.8%;
        --input: 0 0% 89.8%;
        --ring: 0 0% 3.9%;
        --chart-1: 12 76% 61%;
        --chart-2: 173 58% 39%;
        --chart-3: 197 37% 24%;
        --chart-4: 43 74% 66%;
        --chart-5: 27 87% 67%;
        --radius: 0.5rem;
    }
    .dark {
        --background: 0 0% 3.9%;
        --foreground: 0 0% 98%;
        --card: 0 0% 3.9%;
        --card-foreground: 0 0% 98%;
        --popover: 0 0% 3.9%;
        --popover-foreground: 0 0% 98%;
        --primary: 0 0% 98%;
        --primary-foreground: 0 0% 9%;
        --secondary: 0 0% 14.9%;
        --secondary-foreground: 0 0% 98%;
        --muted: 0 0% 14.9%;
        --muted-foreground: 0 0% 63.9%;
        --accent: 0 0% 14.9%;
        --accent-foreground: 0 0% 98%;
        --destructive: 0 62.8% 30.6%;
        --destructive-foreground: 0 0% 98%;
        --border: 0 0% 14.9%;
        --input: 0 0% 14.9%;
        --ring: 0 0% 83.1%;
        --chart-1: 220 70% 50%;
        --chart-2: 160 60% 45%;
        --chart-3: 30 80% 55%;
        --chart-4: 280 65% 60%;
        --chart-5: 340 75% 55%;
    }
}

@layer base {
    * {
        @apply border-border;
    }
    body {
        @apply bg-background text-foreground;
    }
}

/* reset */
button {
    all: unset;
}

/* .cardOpen {
    background-color: black;
    animation: cardAnimateOpen forwards;
    transition-duration: ms;
    z-index: 40;
}

.cardClose {
    background-color: black;
    animation: cardAnimateClose forwards;
    transition-duration: 200ms;
    width: 288px;
    height: 192px;
}

@keyframes cardAnimateOpen {
    0% {
        width: 288px;
        height: 192px;
    }

    50% {
        height: 312px;
        width: 312px;
    }

    100% {
        /* top: 50%;
        transform: translateY(-50%); */

/* @keyframes cardAnimateClose {
} */


.SwitchRoot {
	width: 50px;
	height: 25px;
    background-color: #03071210;
	border-radius: 9999px;
	position: relative;
	&[data-state="checked"] {
		background-color: #1e2939a0;
	}
}

.SwitchThumb {
	display: block;
	width: 21px;
	height: 21px;
	border-radius: 9999px;
	box-shadow: 0 2px 2px var(--black-a7);
	transition: transform 100ms;
	transform: translateX(2px);
	will-change: transform;
	&[data-state="checked"] {
		transform: translateX(27px);
	}
}

.DropdownMenuContent,
.DropdownMenuSubContent {
    /* * {
        border: 1px solid red;
    } */
    width: 150px;
    background-color: white;
    border-radius: 6px;
    display: flex;
    gap: 10px;
    flex-direction: column;
    animation-duration: 400ms;
    animation-timing-function: cubic-bezier(0.16, 1, 0.3, 1);
    will-change: transform, opacity;
    margin-right: 20px;
    padding: 10px 10px;
}
.DropdownMenuContent[data-side="top"],
.DropdownMenuSubContent[data-side="top"] {
    animation-name: slideDownAndFade;
}
.DropdownMenuContent[data-side="right"],
.DropdownMenuSubContent[data-side="right"] {
    animation-name: slideLeftAndFade;
}
.DropdownMenuContent[data-side="bottom"],
.DropdownMenuSubContent[data-side="bottom"] {
    animation-name: slideUpAndFade;
}
.DropdownMenuContent[data-side="left"],
.DropdownMenuSubContent[data-side="left"] {
    animation-name: slideRightAndFade;
}

.DropdownMenuItem,
.DropdownMenuCheckboxItem,
.DropdownMenuRadioItem,
.DropdownMenuSubTrigger {
    font-size: 18px;
    line-height: 1;
    border-radius: 3px;
    display: flex;
    align-items: center;
    height: 30px;
    position: relative;
    user-select: none;
    outline: none;
    padding-inline: 10px;
    padding-block: 20px;
}
.DropdownMenuSubTrigger[data-state="open"] {
    background-color: var(--violet-4);
    color: var(--violet-11);
}

.DropdownMenuLabel {
    padding-left: 25px;
    font-size: 12px;
    line-height: 25px;
    color: var(--mauve-11);
}

.DropdownMenuArrow {
    fill: white;
}

.IconButton {
    font-family: inherit;
    border-radius: 100%;
    height: 45px;
    width: 45px;
    display: inline-flex;
    align-items: center;
    justify-content: center;
    background-color: white;
}
.IconButton:hover {
    background-color: var(--violet-3);
}
.IconButton:focus {
    box-shadow: 0 0 0 2px black;
}

.RightSlot {
    margin-left: auto;
    padding-left: 20px;
    color: var(--mauve-11);
}
[data-highlighted] > .RightSlot {
    color: white;
}
[data-disabled] .RightSlot {
    color: var(--mauve-8);
}

@keyframes slideUpAndFade {
    from {
        opacity: 0;
        transform: translateY(2px);
    }
    to {
        opacity: 1;
        transform: translateY(0);
    }
}

@keyframes slideRightAndFade {
    from {
        opacity: 0;
        transform: translateX(-2px);
    }
    to {
        opacity: 1;
        transform: translateX(0);
    }
}

@keyframes slideDownAndFade {
    from {
        opacity: 0;
        transform: translateY(-2px);
    }
    to {
        opacity: 1;
        transform: translateY(0);
    }
}

@keyframes slideLeftAndFade {
    from {
        opacity: 0;
        transform: translateX(2px);
    }
    to {
        opacity: 1;
        transform: translateX(0);
    }
}
